{"version":3,"sources":["Redux/Application/constants.js","Redux/Application/reducer.js","Redux/rootReducer.js","Redux/store.js","components/NavBar/NavBar.js","Redux/Application/actions.js","components/NavBarContainer/NavBarContainer.js","components/RolesView/RolesView.js","App/App.theme.js","App/App.js","index.js"],"names":["initialState","applications","appReducer","combineReducers","application","state","type","payload","constants","error","message","createStore","action","composeWithDevTools","applyMiddleware","thunk","useStyles","makeStyles","theme","appBar","backgroundColor","palette","secondary","main","formControl","margin","spacing","minWidth","select","color","primary","contrastText","selectMenu","notchedOutline","borderColor","NavBar","classes","useState","selectedApp","setSelectedApp","AppBar","className","position","Toolbar","FormControl","variant","Select","labelId","id","value","displayEmpty","onChange","e","target","MenuProps","paper","MenuItem","disabled","map","app","name","defaultProps","connect","apiUri","process","REACT_APP_API_URI","getApplications","dispatch","console","log","axios","get","method","headers","Accept","then","res","data","catch","err","handleGetApplications","useEffect","table","width","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","role","key","scope","colors","light","dark","createMuiTheme","text","background","default","overrides","content","ReactDOM","render","store","ThemeProvider","RolesView","document","getElementById"],"mappings":"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","file":"static/js/main.877ef59e.chunk.js","sourcesContent":["export default {\n  RECIEVED_APPLICATIONS: 'RECIEVED_APPLICATIONS',\n  RECIEVED_ERROR: 'RECIEVED_ERROR'\n};\n","import constants from './constants';\n\nconst initialState = {\n  applications: null\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case constants.RECIEVED_APPLICATIONS:\n      return {\n        ...state,\n        applications: payload\n      };\n    case constants.RECIEVED_ERROR:\n      return { ...state, error: payload.message };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport application from './Application/reducer';\n\nconst appReducer = combineReducers({\n  application\n});\n\nexport default (state, action) => appReducer({ ...state }, action);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer';\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","/* eslint-disable comma-dangle */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  AppBar,\n  Toolbar,\n  FormControl,\n  Select,\n  MenuItem\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  select: { color: theme.palette.primary.contrastText },\n  selectMenu: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.primary.contrastText\n  },\n  notchedOutline: {\n    borderColor: theme.palette.primary.main\n  }\n}));\n\nconst NavBar = ({ applications }) => {\n  const classes = useStyles();\n  const [selectedApp, setSelectedApp] = useState('');\n  return (\n    applications && (\n      <AppBar className={classes.appBar} position=\"sticky\">\n        <Toolbar>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <Select\n              className={classes.select}\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={selectedApp}\n              displayEmpty\n              onChange={e => setSelectedApp(e.target.value)}\n              MenuProps={{\n                classes: { paper: classes.selectMenu }\n              }}\n            >\n              <MenuItem value=\"\" disabled>\n                Select Application\n              </MenuItem>\n              {applications.map(app => (\n                <MenuItem value={app.id}>{app.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Toolbar>\n      </AppBar>\n    )\n  );\n};\n\nNavBar.propTypes = {\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  )\n};\n\nNavBar.defaultProps = {\n  applications: null\n};\n\nconst mapStateToProps = state => ({\n  applications: state.application.applications\n});\n\nexport default connect(mapStateToProps)(NavBar);\n","import axios from 'axios';\nimport constants from './constants';\n\nconst apiUri = process.env.REACT_APP_API_URI;\n\n// action creators\nexport const recievedApplications = payload => ({\n  type: constants.RECIEVED_APPLICATIONS,\n  payload\n});\n\nexport const recievedError = payload => ({\n  type: constants.RECIEVED_ERROR,\n  payload\n});\n\n// side effects\nexport const getApplications = () => dispatch => {\n  console.log(apiUri);\n\n  return axios\n    .get(`${apiUri}/apps`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => dispatch(recievedApplications(res.data)))\n    .catch(err => dispatch(recievedError(err)));\n};\n","/* eslint-disable comma-dangle */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NavBar from '../NavBar/NavBar';\nimport { getApplications } from '../../Redux/Application/actions';\n\nconst NavBarContainer = ({ handleGetApplications }) => {\n  useEffect(() => {\n    handleGetApplications();\n  }, [handleGetApplications]);\n\n  return <NavBar />;\n};\n\nNavBarContainer.propTypes = {\n  handleGetApplications: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  handleGetApplications: () => {\n    dispatch(getApplications());\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(NavBarContainer);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  table: {\n    width: 650\n  }\n});\n\nexport default () => {\n  const classes = useStyles();\n\n  const roles = [\n    { name: 'Role 1' },\n    { name: 'Role 2' },\n    { name: 'Role 3' },\n    { name: 'Role 4' },\n    { name: 'Role 5' }\n  ];\n\n  return (\n    <TableContainer className={classes.table} component={Paper}>\n      <Table aria-label=\"roles table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Roles</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {roles.map(role => (\n            <TableRow key={role.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {role.name}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst colors = {\n  darkCyan: {\n    light: '#31c0ba',\n    main: '#29a19c',\n    dark: '##21827e',\n    contrastText: '#fff'\n  },\n  darkGrey: {\n    light: '#323b48',\n    main: '#222831',\n    dark: '#12151a',\n    contrastText: '#fff'\n  },\n  black: '#000',\n  white: '#fff'\n};\n\nexport default createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: { ...colors.darkCyan },\n    secondary: { ...colors.darkGrey },\n    text: {\n      primary: colors.black,\n      secondary: colors.white\n    },\n    background: {\n      default: colors.darkGrey.light\n    }\n  },\n  overrides: {}\n});\n","import React from 'react';\nimport { ThemeProvider, makeStyles } from '@material-ui/styles';\nimport { Provider } from 'react-redux';\nimport store from '../Redux/store';\nimport NavBarContainer from '../components/NavBarContainer/NavBarContainer';\nimport RolesView from '../components/RolesView/RolesView';\nimport theme from './App.theme';\n\nconst useStyles = makeStyles({\n  content: {\n    margin: '32px'\n  }\n});\n\nexport default () => {\n  const classes = useStyles();\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <NavBarContainer />\n        <div className={classes.content}>\n          <RolesView />\n        </div>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}